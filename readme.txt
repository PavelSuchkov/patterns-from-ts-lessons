chain of command(middlewares) - из названия понятно. Пропускаем данные через функции
observer.ts - тут у нас есть класс который должен уметь уведомлять своих подписчиков
подписчики имплементируют один метод и в нем происходит что угодно
builder.ts - используем когда нужно провести ряд манипуляций над одним объектом
и не всегда эти манипуляции будут в одном порядке и количестве
fabric.ts - сложновато и не так чтобы полезно на фронте, но решил оставить
singleton - вроде из названия понятно. Тут это класс который нельзя
bridge - вот это мне понравилось.
в примере есть сервис рассылки уведомлений.
Само собой для разных платформ своя апишка и свои методы.
Мы можем это упростить
Все классы с логикой отправки расширяют интерфейс (чтобы методы одинаково назывались)
В них может быть разная логика
Потом мы делаем бридж в который прокидываем при создании нужный класс
и используем один и тот же метод везде.